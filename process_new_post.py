from telethon.tl.functions.messages import GetDiscussionMessageRequest
from telethon.tl.types import PeerChannel
from get_message import get_message
from datetime import datetime
import os

COMMENTS_LOG = "comments_log.txt"  # —Å—é–¥–∞ –±—É–¥–µ–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏

def get_next_comment_number():
    """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –Ω–æ–º–µ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö"""
    if not os.path.exists(COMMENTS_LOG):
        return 1

    with open(COMMENTS_LOG, "r", encoding="utf-8") as f:
        lines = f.readlines()

    count = sum(1 for line in lines if line.strip().startswith("#"))
    return count + 1

async def process_new_post(client, channel, message):
    post_id = message.id
    post_text = message.message

    print(f"üìù –ì–æ—Ç–æ–≤–∏–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –ø–æ—Å—Ç–∞ ID {post_id}...")

    discussion = await client(GetDiscussionMessageRequest(channel, post_id))
    linked_chat = discussion.messages[0].peer_id.channel_id
    linked_message_id = discussion.messages[0].id

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ —Å–≤—è–∑–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ
    # comments = []
    # async for comment in client.iter_messages(linked_chat, reply_to=discussion.messages[0].id):
    #     print(comment)
    #     if comment.message:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    #         comments.append(comment.message)

    new_comment = await get_message(post_text)
    print(f"üìù –ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {new_comment}")

    # –ì–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    # comment_number = get_next_comment_number()
    # current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # log_entry = (
    #     f"#{comment_number} | {current_time}\n"
    #     f"Post ID {post_id}\n"
    #     f"Comment: \"{new_comment}\"\n\n"
    # )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    # with open(COMMENTS_LOG, "a", encoding="utf-8") as f:
    #     f.write(log_entry)

    comment = await client.send_message(linked_chat, new_comment, reply_to=linked_message_id)

    print(comment)

    discussion_entity = await client.get_entity(PeerChannel(linked_chat))
    discussion_username = discussion_entity.username

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    comment_link = f"https://t.me/{discussion_username}/{comment.id}"

    group_name = "CommentsForGGKIT"

    group_entity = await client.get_entity(group_name)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    await client.send_message(group_entity, f"–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {new_comment}\nüîó {comment_link}")

    print(f"‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ {linked_message_id}.")
